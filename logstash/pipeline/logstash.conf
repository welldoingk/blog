input {
  beats {
    port => 5044
  }
}

filter {
  if [message] {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{NOTSPACE:thread}\] %{LOGLEVEL:log_level} %{NOTSPACE:logger_name} - %{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
    }
    
    if [log_level] == "ERROR" {
      mutate {
        add_tag => ["error"]
      }
    }
    if [log_level] == "DEBUG" {
      mutate {
        add_tag => ["debug"]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
  
  # SQL 로그를 위한 조건부 출력
  if [logger_name] =~ "SQL" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "sql-logs-%{+YYYY.MM.dd}"
    }
  }
  
  # 그 외 일반 로그
  else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "spring-logs-%{+YYYY.MM.dd}"
    }
  }

  # 디버깅용 콘솔 출력
  stdout { codec => rubydebug }
}